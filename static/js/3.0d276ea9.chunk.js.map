{"version":3,"sources":["components/Forms/AddPostOrMessageForm.tsx","components/Forms/AddPostForm.module.css","images/user.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/Contact/Contact.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["AddPostForm","callBack","classNameTextArea","classNameButton","useForm","mode","register","handleSubmit","setValue","errors","formState","className","s","container","onSubmit","data","message","required","minLength","maxLength","value","placeholder","module","exports","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","Symbol","iterator","constructor","prototype","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","arguments","apply","_setPrototypeOf","p","_inherits","subClass","superClass","TypeError","create","writable","configurable","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","onBlur","updateStatus","deactivateEditMode","onChange","currentTarget","autoFocus","Contact","contact","contactValue","style","paddingLeft","ProfileDataForm","profile","contacts","fullName","useSelector","state","profilePage","aboutME","aboutMe","lookingForaJob","lookingForAJob","lookingForaJobDescription","lookingForAJobDescription","userContacts","profileError","editProfileError","dispatch","useDispatch","reValidateMode","defaultValues","profileInfoWrapper","updateProfileThunk","profileDataFormInputs","type","width","height","resize","outline","border","entries","map","index","key","errorMessage","SuperButton","ProfileData","ProfileInfo","updatePhoto","profileInfoEditMode","keys","length","profileWrapper","profileAvatarWrapper","alt","image","src","photos","large","userPhoto","editProfileButtons","target","files","name","id","htmlFor","editProfile","onClick","editModeProfileInfo","text","Preloader","Post","likeCounts","count","setCount","dateObj","toLocaleString","item","display","avatar","info","marginBottom","MyPosts","postsElements","postData","post","postsWrapper","textarea","addPost","posts","MyPostsContainer","connect","Profile","updateUserStatusThunk","updatePhotoThunk","ProfileContainer","userId","match","params","autorizedUserId","getUserProfileThunk","getUsersStatusThunk","history","push","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","AuthRedirect","auth","withRouter"],"mappings":"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","file":"static/js/3.0d276ea9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { SubmitHandler, useForm } from 'react-hook-form'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport s from './AddPostForm.module.css'\r\n\r\ntype FormType = {\r\n    message: string\r\n}\r\n\r\ntype PropsType = {\r\n    callBack: (text: string) => void\r\n    classNameTextArea?: string\r\n    classNameButton?: string\r\n}\r\n\r\n\r\n\r\nexport const AddPostForm = ({callBack,classNameTextArea,classNameButton}:PropsType) => {\r\n\r\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm<FormType>({ mode: 'onChange', })\r\n    const onSubmit: SubmitHandler<FormType> = (data) => {\r\n        callBack(data.message)\r\n        setValue(\"message\", \"\")\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form className={s.container} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <textarea  className={classNameTextArea} {...register('message', {\r\n                required: true, minLength: 1, maxLength: { value: 300, message: 'max length 300' }\r\n            })}\r\n                placeholder={\"Напиши своё сообщение\"} />\r\n            <span>\r\n                {errors.message?.message}\r\n            </span>\r\n\r\n            <div>\r\n                <SuperButton className={classNameButton} >Send</SuperButton>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddPostForm_container__1w_8w\"};","export default __webpack_public_path__ + \"static/media/user.40a377fa.png\";","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileInfo_container__2bEaS\",\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__TIfvz\",\"profileWrapper\":\"ProfileInfo_profileWrapper__1UWQy\",\"profileAvatarWrapper\":\"ProfileInfo_profileAvatarWrapper__3vqS9\",\"image\":\"ProfileInfo_image__iqC1n\",\"text\":\"ProfileInfo_text__3MgiE\",\"editProfile\":\"ProfileInfo_editProfile__1i-u2\",\"editProfileButtons\":\"ProfileInfo_editProfileButtons__1Zd7-\",\"profileDataFormInputs\":\"ProfileInfo_profileDataFormInputs__1hf2n\",\"errorMessage\":\"ProfileInfo_errorMessage__1yTlT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyPosts_container__2mCmv\",\"posts\":\"MyPosts_posts__16xq0\",\"postsWrapper\":\"MyPosts_postsWrapper__3n5Vz\",\"textarea\":\"MyPosts_textarea__3S7kx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__yqMLX\",\"button\":\"Post_button__1WEtI\",\"info\":\"Post_info__1mlBc\",\"text\":\"Post_text__1OgWd\"};","import React, {useEffect, useState} from 'react'\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileStatus = (props: PropsType) => {\r\n\r\n\r\n    const [editMode, setEditMode] = useState<Boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]) // сетаем значение в локал стейт\r\n\r\n    const activateEditmode = () => {\r\n        if (!props.isOwner) {\r\n            return\r\n        }\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = (status: string) => {\r\n        props.updateStatus(status)\r\n        setEditMode(false)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            {\r\n                !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditmode}>\r\n                        <b>Status</b>: {props.status}\r\n                    </span>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                editMode &&\r\n                <div>\r\n                    <input  onBlur={() => deactivateEditMode(status)}\r\n                           onChange={(e) => setStatus(e.currentTarget.value)} autoFocus value={status}/>\r\n                </div>\r\n            }\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","type PropsType = {\r\n    contact: string | null\r\n    contactValue: string\r\n}\r\nexport const Contact = ({contact, contactValue}: PropsType) => {\r\n    return <div style={{paddingLeft: '15px'}}>\r\n        <b>{contact}</b>: {contactValue}\r\n    </div>\r\n}","import {useForm} from \"react-hook-form\";\r\nimport React from \"react\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {editProfileError, ProfileType, updateProfileThunk} from \"../../../redux/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../redux/reduxStore\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nexport type ProfileDataFormProps = {\r\n    updateStatus: (status: string) => void\r\n    status: string\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n\r\n}\r\ntype FormInputs = {\r\n    fullName: string\r\n    aboutMe: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    contacts: {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n\r\n}\r\nexport const ProfileDataForm = ({updateStatus, status, profile, isOwner}: ProfileDataFormProps) => {\r\n    let contacts = profile.contacts\r\n\r\n    const fullName = useSelector<AppStoreType, string>((state) => state.profilePage.profile.fullName)\r\n    const aboutME = useSelector<AppStoreType, string>((state) => state.profilePage.profile.aboutMe)\r\n    const lookingForaJob = useSelector<AppStoreType, boolean>((state) => state.profilePage.profile.lookingForAJob)\r\n    const lookingForaJobDescription = useSelector<AppStoreType, string>((state) => state.profilePage.profile.lookingForAJobDescription)\r\n    const userContacts = useSelector((state: AppStoreType) => state.profilePage.profile.contacts)\r\n    const profileError = useSelector((state: AppStoreType) => state.profilePage.editProfileError)\r\n\r\n    const dispatch = useDispatch()\r\n    const {register, handleSubmit} = useForm<FormInputs>({\r\n        mode: 'onSubmit',\r\n        reValidateMode: 'onChange',\r\n        defaultValues: {\r\n            fullName: fullName,\r\n            aboutMe: aboutME,\r\n            lookingForAJob: lookingForaJob,\r\n            lookingForAJobDescription: lookingForaJobDescription,\r\n            contacts: userContacts\r\n\r\n        },\r\n    })\r\n    const onSubmit = (data: any) => {\r\n        dispatch(updateProfileThunk(data))\r\n    }\r\n\r\n    return (\r\n\r\n        <form className={s.profileInfoWrapper} onSubmit={handleSubmit(onSubmit)}\r\n              onChange={() => dispatch(editProfileError(''))}>\r\n            <div>\r\n                <b>FullName</b>: <input className={s.profileDataFormInputs} {...register(\"fullName\")} />\r\n            </div>\r\n            <ProfileStatus isOwner={isOwner} status={status} updateStatus={updateStatus}/>\r\n            <div>\r\n                <b>About me</b>: <input className={s.profileDataFormInputs} {...register(\"aboutMe\")} />\r\n            </div>\r\n\r\n            <div>\r\n                <b>Looking for a job</b>: <input type={'checkbox'} {...register(\"lookingForAJob\")} />\r\n            </div>\r\n\r\n            <div>\r\n                <b>My professional skills</b>:\r\n                <div>\r\n                    <textarea style={{\r\n                        width: '264px',\r\n                        height: '100px',\r\n                        resize: 'none',\r\n                        outline: \"none\",\r\n                        border: \"none\"\r\n                    }} {...register('lookingForAJobDescription')} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <b>Contacts</b>:{Object.entries(contacts).map(([key, value], index) =>\r\n                <div>{key}:\r\n                    <input key={index}\r\n                           className={s.profileDataFormInputs} {...register('contacts.' + key as keyof FormInputs)}\r\n                           type=\"text\"/>\r\n                </div>\r\n            )}\r\n                {profileError && (\r\n                    <div className={s.errorMessage}>\r\n                        {profileError}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <SuperButton type={'submit'}>save</SuperButton>\r\n        </form>\r\n    );\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport {editModeProfileInfo, ProfileType} from \"../../../redux/profileReducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"./../../../images/user.png\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {Contact} from \"./Contact/Contact\";\r\nimport {ProfileDataForm} from \"./ProfileDataForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../redux/reduxStore\";\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    updatePhoto: (photo: string) => void\r\n\r\n}\r\nexport type ProfileDataProps = {\r\n    updateStatus: (status: string) => void\r\n    status: string\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n\r\n}\r\n\r\n\r\nfunction ProfileInfo({profile, status, updateStatus, isOwner, updatePhoto}: ProfileInfoType) {\r\n    const dispatch = useDispatch()\r\n    const editMode = useSelector((state: AppStoreType) => state.profilePage.profileInfoEditMode)\r\n    const activateEditMode = () => dispatch(editModeProfileInfo(true))\r\n    if (!Object.keys(profile).length) {\r\n        return <div>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n\r\n\r\n    const savePhotoHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            updatePhoto(e.target.files[0].name)\r\n        }\r\n    }\r\n\r\n    return <div className={s.container}>\r\n\r\n        <div className={s.profileWrapper}>\r\n            <div className={s.profileAvatarWrapper}>\r\n                <img alt={'profileImage'} className={s.image} src={profile.photos.large || userPhoto}/>\r\n                {\r\n                    isOwner\r\n                    && <div className={s.editProfileButtons}>\r\n                        <input onChange={savePhotoHandler} id={'img'}\r\n                               type=\"file\"/>\r\n                        <label htmlFor='img'> updatePhoto</label>\r\n                        <button className={s.editProfile} onClick={() => activateEditMode()}>changeProfile</button>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.text}>\r\n                {editMode ?\r\n                    <ProfileDataForm updateStatus={updateStatus} profile={profile} status={status} isOwner={isOwner}/>\r\n                    :\r\n                    <ProfileData updateStatus={updateStatus} status={status} profile={profile} isOwner={isOwner}/>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nconst ProfileData = ({updateStatus, status, profile, isOwner}: ProfileDataProps) => {\r\n    let contacts = profile.contacts\r\n    return <div className={s.profileInfoWrapper}>\r\n\r\n        <div>\r\n            <b>FullName</b>: {profile.fullName}\r\n        </div>\r\n        <ProfileStatus isOwner={isOwner} status={status} updateStatus={updateStatus}/>\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <>\r\n            <b>Contacts</b>:{Object.entries(contacts).map(\r\n            ([key, value], index) =>\r\n                <Contact\r\n                    key={index}\r\n                    contact={key}\r\n                    contactValue={value}/>)}\r\n        </>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo","import React, { useState } from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport SuperButton from \"../../../common/SuperButton/SuperButton\";\r\n\r\n\r\n\r\ntype PropsPostType = {\r\n    message: string\r\n    avatar: string\r\n    likeCounts: number\r\n\r\n}\r\n\r\n\r\nfunction Post(props: PropsPostType) {\r\n\r\n    let [count, setCount] = useState(props.likeCounts)\r\n    let dateObj = new Date('December 17, 2021 03:24:00').toLocaleString()\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n           <div  style={{display:'flex'}}>\r\n               <img alt={'postImage'} src={props.avatar} />\r\n               <div  className={s.info}>\r\n                   <div style={{marginBottom:'5px'}}>\r\n                       <b>Test User</b>\r\n                   </div>\r\n                   <div>{dateObj}</div>\r\n               </div>\r\n           </div>\r\n            <div className={s.text} >{props.message}</div>\r\n\r\n            <div>\r\n                <SuperButton  onClick={() => setCount(count + 1)}> {count} like </SuperButton>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport {AddPostForm} from \"../../Forms/AddPostOrMessageForm\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n\r\n    let state = props.profilePage\r\n\r\n    let postsElements = state.postData.map(post => <Post key={post.id} message={post.post}\r\n                                                         likeCounts={post.likeCounts} avatar={post.avatar}/>)\r\n\r\n\r\n    return (\r\n        <div className={s.container}>\r\n\r\n            <div className={s.postsWrapper}>\r\n                <h3> My Posts </h3>\r\n                <AddPostForm classNameTextArea={s.textarea} callBack={props.addPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import { connect } from \"react-redux\";\r\nimport { addPost, PostDataType } from \"../../../redux/profileReducer\";\r\nimport { AppStoreType } from \"../../../redux/reduxStore\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\ntype mapStateType = {\r\n    profilePage: MyPostsType\r\n}\r\n\r\ntype MyPostsType = {\r\n    postData: Array<PostDataType>\r\n}\r\n\r\n\r\ntype mapDispatchType = {\r\n    addPost: (text: string) => void\r\n}\r\nexport type MyPostsPropsType = mapStateType & mapDispatchType\r\n\r\nconst mapStateToProps = (state: AppStoreType): mapStateType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts)\r\n\r\n\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profileReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatusThunk: (status: string) => void\r\n    isOwner: boolean\r\n    updatePhotoThunk: (photo: string) => void\r\n}\r\n\r\nfunction Profile({profile, status, updateUserStatusThunk, isOwner,updatePhotoThunk}: ProfilePropsType) {\r\n\r\n    return <div className={`container`}>\r\n        <ProfileInfo updatePhoto={updatePhotoThunk}  isOwner={isOwner} profile={profile} status={status} updateStatus={updateUserStatusThunk}/>\r\n        <MyPostsContainer/>\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Profile","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {\r\n    getUserProfileThunk,\r\n    getUsersStatusThunk,\r\n    ProfileType,\r\n    updatePhotoThunk,\r\n    updateUserStatusThunk\r\n} from \"../../redux/profileReducer\";\r\nimport {AppStoreType} from \"../../redux/reduxStore\";\r\nimport Profile from \"./Profile\";\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType\r\n    status: string,\r\n    autorizedUserId: number | null\r\n\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfileThunk: (userId: string) => void\r\n    getUsersStatusThunk: (userId: string) => void\r\n    updateUserStatusThunk: (status: string) => void\r\n    updatePhotoThunk: (photo: string) => void\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\r\ntype ProfileContainerType = mapStateToPropsType & MapDispatchPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    savePhoto(){\r\n\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (userId || this.props.autorizedUserId) {\r\n\r\n            userId = userId ?? this.props.autorizedUserId?.toString()\r\n\r\n            this.props.getUserProfileThunk(userId)\r\n            this.props.getUsersStatusThunk(userId)\r\n\r\n        } else {\r\n            this.props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n        this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile isOwner={!this.props.match.params.userId} {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStoreType): mapStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.data.id,\r\n})\r\n\r\n\r\nexport default compose<React.ComponentType>(AuthRedirect,\r\n    connect(mapStateToProps, {getUserProfileThunk, getUsersStatusThunk, updateUserStatusThunk, updatePhotoThunk}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}